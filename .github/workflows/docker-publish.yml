name: Dev Container

on:
  schedule:
    - cron: '24 8 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.actor }}/zephyr

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        arch: [x86_64]
        sdk: [0.15.2]
        zephyr: [main,v3.2.0]
        tool: [
          { prefix: "aarch64", suffix: "-zephyr-elf"},
          { prefix: "arc64", suffix: "-zephyr-elf"},
          { prefix: "arc", suffix: "-zephyr-elf"},
          { prefix: "arm", suffix: "-zephyr-eabi"},
          { prefix: "mips", suffix: "-zephyr-elf"},
          { prefix: "nios2", suffix: "-zephyr-elf"},
          { prefix: "riscv64", suffix: "-zephyr-elf"},
          { prefix: "sparc", suffix: "-zephyr-elf"},
          { prefix: "x86_64", suffix: "-zephyr-elf"},
          { prefix: "xtensa-espressif_esp32", suffix: "_zephyr-elf"},
          { prefix: "xtensa-espressif_esp32s2", suffix: "_zephyr-elf"},
          { prefix: "xtensa-intel_apl_adsp", suffix: "_zephyr-elf"},
          { prefix: "xtensa-intel_bdw_adsp", suffix: "_zephyr-elf"},
          { prefix: "xtensa-intel_byt_adsp", suffix: "_zephyr-elf"},
          { prefix: "xtensa-intel_s1000", suffix: "_zephyr-elf"},
          { prefix: "xtensa-nxp_imx_adsp", suffix: "_zephyr-elf"},
          { prefix: "xtensa-nxp_imx8m_adsp", suffix: "_zephyr-elf"},
          { prefix: "xtensa-sample_controller", suffix: "_zephyr-elf"}
        ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.actor }}/zephyr-${{ matrix.tool.prefix }}:${{ matrix.zephyr }}-${{ matrix.sdk }}sdk
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ARCHITECTURE=${{ matrix.arch }}
            ZEPHYR_SDK_VERSION=${{ matrix.sdk }}
            ZEPHYR_VERSION=${{ matrix.zephyr }}
            TOOLCHAIN=${{ matrix.tool.prefix }}${{ matrix.tool.suffix }}
